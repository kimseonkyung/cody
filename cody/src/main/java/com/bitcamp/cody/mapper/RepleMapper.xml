<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Dao 에서 메퍼 설정에서 필요한 엘리먼트(설정) 호출할때 식별자 역할 : 필수 -->
<mapper namespace="com.bitcamp.cody.dao.RepleDao">

	<!-- select 구문일 때 사용하는 태그 -->
	<!-- ID : 외부에서 해당 태그를 부를 때 사용하는 식별 이름, 메퍼 파일안에서 중복 X resultType : 질의의 결과를 
		지정하는 클래스타입의 객체에 데이터 메핑 parameterType : 여러 데이터를 하나의 객체에 담아서 받을 때 해당 객체 타입으로 
		지정 -->

	<select id="selectByIdx" resultType="com.bitcamp.cody.dto.RepleDto">
		select *
		from reple
		where reple_idx = #{idx} 
	</select>

	<select id="selectList" resultType="com.bitcamp.cody.dto.RepleDto">
		select *
		from reple
		where cody_idx = #{idx}
		order by regroup asc, reorder asc  
	</select>

	<select id="maxSelect" resultType="int">
		select max(regroup)+1
		from reple
	</select>
	
	<!-- 첫댓글 입력 -->
	<insert id="repleInsert" parameterType="com.bitcamp.cody.dto.RepleDto" useGeneratedKeys="true" keyProperty="idx">
		insert into reple (reple_contents, member_idx, cody_idx)
		values (#{reple_contents}, #{member_idx}, #{cody_idx} )
	</insert>
	
	<!-- 대댓글 입력 -->
	<insert id="re_repleInsert" parameterType="com.bitcamp.cody.dto.RepleDto" useGeneratedKeys="true" keyProperty="idx">
		insert into reple (reparent, redepth, reple_contents, member_idx, cody_idx)
		values ( #{reple_idx}, #{redepth}+1 , #{reple_contents}, #{member_idx}, #{cody_idx} )
	</insert>
	
	
	<update id="reorderPlus" parameterType="int">
		update reple set reorder = reorder+1
		where reorder > #{order} and reorder = #{order} and group=#{group}
	</update>


	<delete id="repleDelete" parameterType="com.bitcamp.cody.dto.RepleDto">
		delete from reple where reple_idx = #{idx}
	</delete>

	<!-- 수신확인 -->
	<update id="receptionUpdate" parameterType="com.bitcamp.cody.dto.RepleDto">
		update reple set reception = false;
	</update>

	<select id="selectReception" resultType="int">
		select max(reception)
		from reple
	</select>

</mapper>